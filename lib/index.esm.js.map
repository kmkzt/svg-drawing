{"version":3,"file":"index.esm.js","sources":["../src/utils/svgFormatting.ts","../src/utils/getPassiveOptions.ts","../src/SvgDrawing.ts","../src/SvgAnimation.ts"],"sourcesContent":["/**\n * remove <g>\n * remove transform attribure\n * @param svgString\n * @returns {SVGSVGElement}\n */\nexport const svgFormatting = (\n  svgXML: string | SVGSVGElement\n): SVGSVGElement => {\n  const doc: Document | SVGSVGElement =\n    typeof svgXML === 'string'\n      ? new DOMParser().parseFromString(svgXML, 'image/svg+xml')\n      : svgXML\n  const svgEle: SVGSVGElement = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'svg'\n  )\n  const originSvgEle: SVGSVGElement | null = doc.querySelector('svg')\n  if (!originSvgEle) return svgEle\n  ;['width', 'height', 'viewBox'].map((attr: string) => {\n    const attrValue: string | null = originSvgEle.getAttribute(attr)\n    if (attrValue) svgEle.setAttribute(attr, attrValue)\n  })\n  const pathEle: NodeListOf<SVGPathElement> = doc.querySelectorAll('path')\n  pathEle.forEach((path: SVGPathElement) => {\n    path.removeAttribute('transform')\n    svgEle.appendChild(path)\n  })\n  return svgEle\n}\n","export const getPassiveOptions = (\n  passive: boolean = true\n): boolean | { passive: boolean } => {\n  try {\n    const check = () => null\n    window.addEventListener('testPassive', check, { passive })\n    window.removeEventListener('testPassive', check)\n    return { passive }\n  } catch (e) {\n    return false\n  }\n}\n","import Two, { ConstructorParams } from 'two.js'\nimport { svgFormatting } from './utils/svgFormatting'\nimport { getPassiveOptions } from './utils/getPassiveOptions'\n\nexport interface DrawingOption extends ConstructorParams {\n  el: SvgDrawing['el']\n  penColor?: SvgDrawing['penColor']\n  penWidth?: SvgDrawing['penWidth']\n  strokeCap?: SvgDrawing['strokeCap'] // butt | round | square | inherit\n  strokeLineJoin?: SvgDrawing['strokeLineJoin'] // miter | round | bevel\n}\n\nexport class SvgDrawing extends Two {\n  public penColor: Two.Color\n  public penWidth: number\n  public strokeCap: string\n  public strokeLineJoin: string\n  private line: Two.Path | null\n  private current: Two.Vector\n  private el: HTMLElement\n  constructor(params: DrawingOption) {\n    super(params)\n    /**\n     * bind methods\n     */\n    this.clearListner = this.clearListner.bind(this)\n    this.toSvgXml = this.toSvgXml.bind(this)\n    this.toSvgBase64 = this.toSvgBase64.bind(this)\n    this.drawingStart = this.drawingStart.bind(this)\n    this.drawingMove = this.drawingMove.bind(this)\n    this.drawingEnd = this.drawingEnd.bind(this)\n    this.mouseUp = this.mouseUp.bind(this)\n    this.mouseMove = this.mouseMove.bind(this)\n    this.mouseDown = this.mouseDown.bind(this)\n    this.touchStart = this.touchStart.bind(this)\n    this.touchMove = this.touchMove.bind(this)\n    this.touchEnd = this.touchEnd.bind(this)\n    this.init.bind(this)\n    /**\n     * Setup parameter\n     */\n    this.line = null\n    // TODO: Fix Two.vector constructor params\n    this.current = new Two.Vector(0, 0)\n    this.penColor = params.penColor || '#333'\n    this.penWidth = params.penWidth || 10\n    this.strokeCap = params.strokeCap || 'round'\n    this.strokeLineJoin = params.strokeLineJoin || 'round'\n    this.type = params.type || Two.Types.svg\n    this.el = params.el\n    this.width = params.width || this.el.clientWidth\n    this.height = params.height || this.el.clientHeight\n    this.init()\n  }\n\n  /**\n   * toSvgXML\n   */\n  public toSvgXml(): string | null {\n    const domElement: HTMLElement = (this.renderer as any).domElement\n    const svgElement: SVGSVGElement = svgFormatting(domElement.outerHTML)\n    if (!domElement) return null\n    return `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.width}\" height=\"${this.height}\" viewBox=\"0 0 ${this.width} ${this.height}\">${svgElement.innerHTML}</svg>`\n  }\n  /**\n   * toSvgXML\n   */\n  public toSvgBase64(): string | null {\n    const svgXml = this.toSvgXml()\n    if (!svgXml) return null\n    return `data:image/svg+xml;base64,${btoa(svgXml)}`\n  }\n  /**\n   * listner clear\n   */\n  public clearListner() {\n    this.el.removeEventListener('mousedown', this.mouseDown)\n    this.el.removeEventListener('touchstart', this.touchStart)\n  }\n  /**\n   * Init methods\n   */\n  private init() {\n    this.appendTo(this.el)\n    this.el.addEventListener(\n      'mousedown',\n      this.mouseDown,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener(\n      'touchstart',\n      this.touchStart,\n      getPassiveOptions(false)\n    )\n    return this\n  }\n  /**\n   * Drawing Line methods\n   */\n  private drawingStart({ x, y }: { x: number; y: number }) {\n    this.current.set(x, y)\n  }\n  private drawingMove({ x, y }: { x: number; y: number }): void {\n    const rect: ClientRect | DOMRect = this.el.getBoundingClientRect()\n    const makePoint = (mx: number, my: number): Two.Vector =>\n      new Two.Vector(mx - rect.left, my - rect.top)\n    if (this.line) {\n      if (\n        this.line.linewidth !== this.penWidth ||\n        this.line.stroke !== this.penColor\n      ) {\n        this.drawingEnd()\n        return\n      }\n      const v: Two.Vector = makePoint(x, y)\n      this.line.vertices.push(v as Two.Anchor)\n      return\n    }\n    const vprev: Two.Vector = makePoint(this.current.x, this.current.y)\n    const vnext: Two.Vector = makePoint(x, y)\n    this.current.set(x, y)\n    this.line = this.makeCurve([vprev, vnext], true)\n    this.line.noFill().stroke = this.penColor\n    this.line.linewidth = this.penWidth\n    this.line.cap = this.strokeCap\n    this.line.join = this.strokeLineJoin\n    this.line.vertices.map(v => {\n      if (!this.line) return\n      v.addSelf(this.line.translation)\n    })\n    this.line.translation.clear()\n  }\n\n  private drawingEnd() {\n    this.line = null\n  }\n  /**\n   * Drawing MouseEvent\n   */\n  private mouseDown(e: MouseEvent) {\n    e.preventDefault()\n    this.drawingStart({ x: e.clientX, y: e.clientY })\n    this.el.addEventListener(\n      'mousemove',\n      this.mouseMove,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener('mouseup', this.mouseUp, getPassiveOptions(false))\n  }\n  private mouseMove(e: MouseEvent): void {\n    e.preventDefault()\n    this.drawingMove({ x: e.clientX, y: e.clientY })\n  }\n  private mouseUp(e: MouseEvent) {\n    e.preventDefault()\n    this.el.removeEventListener('mousemove', this.mouseMove)\n    this.el.removeEventListener('mouseup', this.mouseUp)\n    this.drawingEnd()\n  }\n\n  /**\n   * Drawing TouchEvent\n   */\n  private touchStart(e: TouchEvent) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    this.drawingStart({ x: touch.clientX, y: touch.clientY })\n    this.el.addEventListener(\n      'touchmove',\n      this.touchMove,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener(\n      'touchend',\n      this.touchEnd,\n      getPassiveOptions(false)\n    )\n  }\n  private touchMove(e: TouchEvent) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    this.drawingMove({\n      x: touch.clientX,\n      y: touch.clientY\n    })\n  }\n  private touchEnd(e: TouchEvent) {\n    e.preventDefault()\n    this.el.removeEventListener('touchmove', this.touchMove)\n    this.el.removeEventListener('touchend', this.touchEnd)\n    this.drawingEnd()\n  }\n}\n","import Two, { ConstructorParams } from 'two.js'\nimport { svgFormatting } from './utils/svgFormatting'\nexport interface AnimationOption extends ConstructorParams {\n  el: SvgAnimation['el']\n  shakingRange?: SvgAnimation['shakingRange']\n}\n\nexport class SvgAnimation extends Two {\n  public shakingRange: number\n  private el: HTMLElement\n  constructor(params: AnimationOption) {\n    super(params)\n    /**\n     * bind methods\n     */\n    this.animationStart = this.animationStart.bind(this)\n    this.shaking = this.shaking.bind(this)\n    this.initSvgXml = this.initSvgXml.bind(this)\n    this.strokeAnimation = this.strokeAnimation.bind(this)\n    this.loadScene = this.loadScene.bind(this)\n    this.loadSvgXml = this.loadSvgXml.bind(this)\n    this.splitEnd = this.splitEnd.bind(this)\n    /**\n     * Setup parameter\n     */\n    // TODO: Fix Two.vector constructor params\n    this.shakingRange = params.shakingRange || 2\n    this.type = params.type || Two.Types.canvas\n    this.el = params.el\n    this.width = params.width || this.el.clientWidth\n    this.height = params.height || this.el.clientHeight\n    this.animationStart()\n  }\n  /**\n   * Shaking Drawing line\n   */\n  public shaking(): () => void {\n    const randomShaking = (): number =>\n      Math.random() * this.shakingRange - this.shakingRange / 2\n    const updateShake = (frameCount: any, timeDelta: any) => {\n      // shake speed\n      if (frameCount % 5 !== 0) return\n      this.scene.children.map((child: Two.Object) => {\n        if (!(child as Two.Path).vertices) return\n        ;(child as Two.Path).vertices.map((v: Two.Anchor | any) => {\n          // TODO: define position types\n          // v.position is base position\n          if (!v.position) {\n            v.position = v.clone()\n          }\n          v.x = v.position.x + randomShaking()\n          v.y = v.position.y + randomShaking()\n        })\n      })\n    }\n\n    const sceneChildrenRestore = () =>\n      this.scene.children.map((child: Two.Object) => {\n        const vertices = (child as Two.Path).vertices\n        if (!vertices) return\n        vertices.map((v: Two.Anchor | any) => {\n          // TODO: define position types\n          if (!v.position) {\n            return\n          }\n          v.x = v.position.x\n          v.y = v.position.y\n          delete v.position\n        })\n      })\n    this.bind('update', updateShake).play()\n    return () => {\n      this.unbind('update', updateShake)\n      sceneChildrenRestore()\n    }\n  }\n  /**\n   * Load SCENE\n   * @param {Two.Group} scene\n   */\n  public loadScene(scene: Two.Group) {\n    this.clear()\n    scene.children.map((twoObj: Two.Object) => {\n      this.scene.add(twoObj.clone())\n    })\n    this.update()\n  }\n  /**\n   * Load SVGXML\n   * @param {string | SVGSVGElement} svgXml\n   */\n  public loadSvgXml(svgXml: string | SVGSVGElement) {\n    const svgElement: SVGSVGElement | null = svgFormatting(svgXml)\n    if (!svgElement) return\n    const svgTwo: Two.Group = this.interpret(svgElement)\n    this.clear()\n    // get element width\n    // TODO: getelement Refactor\n    document.body.appendChild(svgElement)\n    const originWidth = svgElement.clientWidth\n    document.body.removeChild(svgElement)\n    this.scene.scale = this.width / originWidth\n    svgTwo.children.map((twoObj: Two.Object) => {\n      this.scene.add(twoObj.clone())\n    })\n    this.scene.center().translation.set(this.width / 2, this.height / 2)\n    this.update()\n  }\n  /**\n   * DrawingStart\n   */\n  private animationStart(): SvgAnimation {\n    this.appendTo(this.el)\n    return this\n  }\n  // TODO: SvgElement XML test\n  public initSvgXml(svgNode: SVGElement) {\n    this.clear()\n    const fresh: Two.Group = this.interpret(svgNode)\n    ;(fresh as any).subdivide()\n    this.scene.add(fresh)\n  }\n  /**\n   * strokeAnimationGif\n   */\n  public strokeAnimation() {\n    let t = 0\n    const update = () => {\n      if (t < 0.9999) {\n        t += 0.00625\n      } else {\n        t = 0\n      }\n      setEndScene(this.scene, t)\n    }\n    this.bind('update', update).play()\n    return () => this.unbind('update', update)\n  }\n  /**\n   * SplitEnd\n   * @param {number} p\n   */\n  public splitEnd(p: number) {\n    setEndScene(this.scene, p)\n    this.update()\n  }\n}\n\nconst setEndScene = (group: Two.Group, ti: number) => {\n  const distances = calculateDistances(group)\n  const total = distances.reduce((to: number, d: number) => to + d, 0)\n  const traversed: number = ti * total\n  let current = 0\n  for (let i = 0; i < group.children.length; i++) {\n    const distance = distances[i]\n    const min = current\n    const max = current + distance\n    ;(group.children[i] as Two.Path).ending = cmap(traversed, min, max, 0, 1)\n    current = max\n  }\n}\nfunction calculateDistances(group: Two.Group): number[] {\n  return group.children.reduce((distances: number[], child: Two.Object) => {\n    let d: number = 0\n    let a: Two.Vector\n    if (!(child as Two.Path).vertices) return distances\n    ;(child as Two.Path).vertices.map((b: Two.Vector, i: number) => {\n      if (i > 0) {\n        d += a.distanceTo(b)\n      }\n      a = b\n    })\n    return [...distances, d]\n  }, [])\n}\n\nconst clamp = (v: number, min: number, max: number) =>\n  Math.max(Math.min(v, max), min)\n\nconst map = (v: number, i1: number, i2: number, o1: number, o2: number) =>\n  o1 + (o2 - o1) * ((v - i1) / (i2 - i1))\n\nconst cmap = (v: number, i1: number, i2: number, o1: number, o2: number) =>\n  clamp(map(v, i1, i2, o1, o2), o1, o2)\n"],"names":["svgFormatting","svgXML","doc","DOMParser","parseFromString","svgEle","document","createElementNS","originSvgEle","querySelector","map","attr","attrValue","getAttribute","setAttribute","pathEle","querySelectorAll","forEach","path","removeAttribute","appendChild","getPassiveOptions","passive","check","window","addEventListener","removeEventListener","e","SvgDrawing","Two","constructor","params","clearListner","bind","toSvgXml","toSvgBase64","drawingStart","drawingMove","drawingEnd","mouseUp","mouseMove","mouseDown","touchStart","touchMove","touchEnd","init","line","current","Vector","penColor","penWidth","strokeCap","strokeLineJoin","type","Types","svg","el","width","clientWidth","height","clientHeight","domElement","renderer","svgElement","outerHTML","innerHTML","svgXml","btoa","appendTo","x","y","set","rect","getBoundingClientRect","makePoint","mx","my","left","top","linewidth","stroke","v","vertices","push","vprev","vnext","makeCurve","noFill","cap","join","addSelf","translation","clear","preventDefault","clientX","clientY","touch","touches","SvgAnimation","animationStart","shaking","initSvgXml","strokeAnimation","loadScene","loadSvgXml","splitEnd","shakingRange","canvas","randomShaking","Math","random","updateShake","frameCount","timeDelta","scene","children","child","position","clone","sceneChildrenRestore","play","unbind","twoObj","add","update","svgTwo","interpret","body","originWidth","removeChild","scale","center","svgNode","fresh","subdivide","t","setEndScene","p","group","ti","distances","calculateDistances","total","reduce","to","d","traversed","i","length","distance","min","max","ending","cmap","a","b","distanceTo","clamp","i1","i2","o1","o2"],"mappings":"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"}