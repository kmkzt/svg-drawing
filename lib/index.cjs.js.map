{"version":3,"file":"index.cjs.js","sources":["../src/utils/svgFormatting.ts","../src/utils/getPassiveOptions.ts","../src/SvgDrawing.ts","../src/SvgAnimation.ts"],"sourcesContent":["/**\n * remove <g>\n * remove transform attribure\n * @param svgString\n * @returns {SVGSVGElement}\n */\nexport const svgFormatting = (\n  svgXML: string | SVGSVGElement\n): SVGSVGElement => {\n  const doc: Document | SVGSVGElement =\n    typeof svgXML === 'string'\n      ? new DOMParser().parseFromString(svgXML, 'image/svg+xml')\n      : svgXML\n  const svgEle: SVGSVGElement = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'svg'\n  )\n  const originSvgEle: SVGSVGElement | null = doc.querySelector('svg')\n  if (!originSvgEle) return svgEle\n  ;['width', 'height', 'viewBox'].map((attr: string) => {\n    const attrValue: string | null = originSvgEle.getAttribute(attr)\n    if (attrValue) svgEle.setAttribute(attr, attrValue)\n  })\n  const pathEle: NodeListOf<SVGPathElement> = doc.querySelectorAll('path')\n  pathEle.forEach((path: SVGPathElement) => {\n    path.removeAttribute('transform')\n    svgEle.appendChild(path)\n  })\n  return svgEle\n}\n","export const getPassiveOptions = (\n  passive: boolean = true\n): boolean | { passive: boolean } => {\n  try {\n    const check = () => null\n    window.addEventListener('testPassive', check, { passive })\n    window.removeEventListener('testPassive', check)\n    return { passive }\n  } catch (e) {\n    return false\n  }\n}\n","import Two, { ConstructorParams } from 'two.js'\nimport { svgFormatting } from './utils/svgFormatting'\nimport { getPassiveOptions } from './utils/getPassiveOptions'\n\nexport interface DrawingOption extends ConstructorParams {\n  el: SvgDrawing['el']\n  penColor?: SvgDrawing['penColor']\n  penWidth?: SvgDrawing['penWidth']\n  strokeCap?: SvgDrawing['strokeCap'] // butt | round | square | inherit\n  strokeLineJoin?: SvgDrawing['strokeLineJoin'] // miter | round | bevel\n}\n\nexport class SvgDrawing extends Two {\n  public penColor: Two.Color\n  public penWidth: number\n  public strokeCap: string\n  public strokeLineJoin: string\n  private line: Two.Path | null\n  private current: Two.Vector\n  private el: HTMLElement\n  constructor(params: DrawingOption) {\n    super(params)\n    /**\n     * bind methods\n     */\n    this.clearListner = this.clearListner.bind(this)\n    this.toSvgXml = this.toSvgXml.bind(this)\n    this.toSvgBase64 = this.toSvgBase64.bind(this)\n    this.drawingStart = this.drawingStart.bind(this)\n    this.drawingMove = this.drawingMove.bind(this)\n    this.drawingEnd = this.drawingEnd.bind(this)\n    this.mouseUp = this.mouseUp.bind(this)\n    this.mouseMove = this.mouseMove.bind(this)\n    this.mouseDown = this.mouseDown.bind(this)\n    this.touchStart = this.touchStart.bind(this)\n    this.touchMove = this.touchMove.bind(this)\n    this.touchEnd = this.touchEnd.bind(this)\n    this.init.bind(this)\n    /**\n     * Setup parameter\n     */\n    this.line = null\n    // TODO: Fix Two.vector constructor params\n    this.current = new Two.Vector(0, 0)\n    this.penColor = params.penColor || '#333'\n    this.penWidth = params.penWidth || 10\n    this.strokeCap = params.strokeCap || 'round'\n    this.strokeLineJoin = params.strokeLineJoin || 'round'\n    this.type = params.type || Two.Types.svg\n    this.el = params.el\n    this.width = params.width || this.el.clientWidth\n    this.height = params.height || this.el.clientHeight\n    this.init()\n  }\n\n  /**\n   * toSvgXML\n   */\n  public toSvgXml(): string | null {\n    const domElement: HTMLElement = (this.renderer as any).domElement\n    const svgElement: SVGSVGElement = svgFormatting(domElement.outerHTML)\n    if (!domElement) return null\n    return `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${this.width}\" height=\"${this.height}\" viewBox=\"0 0 ${this.width} ${this.height}\">${svgElement.innerHTML}</svg>`\n  }\n  /**\n   * toSvgXML\n   */\n  public toSvgBase64(): string | null {\n    const svgXml = this.toSvgXml()\n    if (!svgXml) return null\n    return `data:image/svg+xml;base64,${btoa(svgXml)}`\n  }\n  /**\n   * listner clear\n   */\n  public clearListner() {\n    this.el.removeEventListener('mousedown', this.mouseDown)\n    this.el.removeEventListener('touchstart', this.touchStart)\n  }\n  /**\n   * Init methods\n   */\n  private init() {\n    this.appendTo(this.el)\n    this.el.addEventListener(\n      'mousedown',\n      this.mouseDown,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener(\n      'touchstart',\n      this.touchStart,\n      getPassiveOptions(false)\n    )\n    return this\n  }\n  /**\n   * Drawing Line methods\n   */\n  private drawingStart({ x, y }: { x: number; y: number }) {\n    this.current.set(x, y)\n  }\n  private drawingMove({ x, y }: { x: number; y: number }): void {\n    const rect: ClientRect | DOMRect = this.el.getBoundingClientRect()\n    const makePoint = (mx: number, my: number): Two.Vector =>\n      new Two.Vector(mx - rect.left, my - rect.top)\n    if (this.line) {\n      if (\n        this.line.linewidth !== this.penWidth ||\n        this.line.stroke !== this.penColor\n      ) {\n        this.drawingEnd()\n        return\n      }\n      const v: Two.Vector = makePoint(x, y)\n      this.line.vertices.push(v as Two.Anchor)\n      return\n    }\n    const vprev: Two.Vector = makePoint(this.current.x, this.current.y)\n    const vnext: Two.Vector = makePoint(x, y)\n    this.current.set(x, y)\n    this.line = this.makeCurve([vprev, vnext], true)\n    this.line.noFill().stroke = this.penColor\n    this.line.linewidth = this.penWidth\n    this.line.cap = this.strokeCap\n    this.line.join = this.strokeLineJoin\n    this.line.vertices.map(v => {\n      if (!this.line) return\n      v.addSelf(this.line.translation)\n    })\n    this.line.translation.clear()\n  }\n\n  private drawingEnd() {\n    this.line = null\n  }\n  /**\n   * Drawing MouseEvent\n   */\n  private mouseDown(e: MouseEvent) {\n    e.preventDefault()\n    this.drawingStart({ x: e.clientX, y: e.clientY })\n    this.el.addEventListener(\n      'mousemove',\n      this.mouseMove,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener('mouseup', this.mouseUp, getPassiveOptions(false))\n  }\n  private mouseMove(e: MouseEvent): void {\n    e.preventDefault()\n    this.drawingMove({ x: e.clientX, y: e.clientY })\n  }\n  private mouseUp(e: MouseEvent) {\n    e.preventDefault()\n    this.el.removeEventListener('mousemove', this.mouseMove)\n    this.el.removeEventListener('mouseup', this.mouseUp)\n    this.drawingEnd()\n  }\n\n  /**\n   * Drawing TouchEvent\n   */\n  private touchStart(e: TouchEvent) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    this.drawingStart({ x: touch.clientX, y: touch.clientY })\n    this.el.addEventListener(\n      'touchmove',\n      this.touchMove,\n      getPassiveOptions(false)\n    )\n    this.el.addEventListener(\n      'touchend',\n      this.touchEnd,\n      getPassiveOptions(false)\n    )\n  }\n  private touchMove(e: TouchEvent) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    this.drawingMove({\n      x: touch.clientX,\n      y: touch.clientY\n    })\n  }\n  private touchEnd(e: TouchEvent) {\n    e.preventDefault()\n    this.el.removeEventListener('touchmove', this.touchMove)\n    this.el.removeEventListener('touchend', this.touchEnd)\n    this.drawingEnd()\n  }\n}\n","import Two, { ConstructorParams } from 'two.js'\nimport { svgFormatting } from './utils/svgFormatting'\nexport interface AnimationOption extends ConstructorParams {\n  el: SvgAnimation['el']\n  shakingRange?: SvgAnimation['shakingRange']\n}\n\nexport class SvgAnimation extends Two {\n  public shakingRange: number\n  private el: HTMLElement\n  constructor(params: AnimationOption) {\n    super(params)\n    /**\n     * bind methods\n     */\n    this.animationStart = this.animationStart.bind(this)\n    this.shaking = this.shaking.bind(this)\n    this.initSvgXml = this.initSvgXml.bind(this)\n    this.strokeAnimation = this.strokeAnimation.bind(this)\n    this.loadScene = this.loadScene.bind(this)\n    this.loadSvgXml = this.loadSvgXml.bind(this)\n    this.splitEnd = this.splitEnd.bind(this)\n    /**\n     * Setup parameter\n     */\n    // TODO: Fix Two.vector constructor params\n    this.shakingRange = params.shakingRange || 2\n    this.type = params.type || Two.Types.canvas\n    this.el = params.el\n    this.width = params.width || this.el.clientWidth\n    this.height = params.height || this.el.clientHeight\n    this.animationStart()\n  }\n  /**\n   * Shaking Drawing line\n   */\n  public shaking(): () => void {\n    const randomShaking = (): number =>\n      Math.random() * this.shakingRange - this.shakingRange / 2\n    const updateShake = (frameCount: any, timeDelta: any) => {\n      // shake speed\n      if (frameCount % 5 !== 0) return\n      this.scene.children.map((child: Two.Object) => {\n        if (!(child as Two.Path).vertices) return\n        ;(child as Two.Path).vertices.map((v: Two.Anchor | any) => {\n          // TODO: define position types\n          // v.position is base position\n          if (!v.position) {\n            v.position = v.clone()\n          }\n          v.x = v.position.x + randomShaking()\n          v.y = v.position.y + randomShaking()\n        })\n      })\n    }\n\n    const sceneChildrenRestore = () =>\n      this.scene.children.map((child: Two.Object) => {\n        const vertices = (child as Two.Path).vertices\n        if (!vertices) return\n        vertices.map((v: Two.Anchor | any) => {\n          // TODO: define position types\n          if (!v.position) {\n            return\n          }\n          v.x = v.position.x\n          v.y = v.position.y\n          delete v.position\n        })\n      })\n    this.bind('update', updateShake).play()\n    return () => {\n      this.unbind('update', updateShake)\n      sceneChildrenRestore()\n    }\n  }\n  /**\n   * Load SCENE\n   * @param {Two.Group} scene\n   */\n  public loadScene(scene: Two.Group) {\n    this.clear()\n    scene.children.map((twoObj: Two.Object) => {\n      this.scene.add(twoObj.clone())\n    })\n    this.update()\n  }\n  /**\n   * Load SVGXML\n   * @param {string | SVGSVGElement} svgXml\n   */\n  public loadSvgXml(svgXml: string | SVGSVGElement) {\n    const svgElement: SVGSVGElement | null = svgFormatting(svgXml)\n    if (!svgElement) return\n    const svgTwo: Two.Group = this.interpret(svgElement)\n    this.clear()\n    // get element width\n    // TODO: getelement Refactor\n    document.body.appendChild(svgElement)\n    const originWidth = svgElement.clientWidth\n    document.body.removeChild(svgElement)\n    this.scene.scale = this.width / originWidth\n    svgTwo.children.map((twoObj: Two.Object) => {\n      this.scene.add(twoObj.clone())\n    })\n    this.scene.center().translation.set(this.width / 2, this.height / 2)\n    this.update()\n  }\n  /**\n   * DrawingStart\n   */\n  private animationStart(): SvgAnimation {\n    this.appendTo(this.el)\n    return this\n  }\n  // TODO: SvgElement XML test\n  public initSvgXml(svgNode: SVGElement) {\n    this.clear()\n    const fresh: Two.Group = this.interpret(svgNode)\n    ;(fresh as any).subdivide()\n    this.scene.add(fresh)\n  }\n  /**\n   * strokeAnimationGif\n   */\n  public strokeAnimation() {\n    let t = 0\n    const update = () => {\n      if (t < 0.9999) {\n        t += 0.00625\n      } else {\n        t = 0\n      }\n      setEndScene(this.scene, t)\n    }\n    this.bind('update', update).play()\n    return () => this.unbind('update', update)\n  }\n  /**\n   * SplitEnd\n   * @param {number} p\n   */\n  public splitEnd(p: number) {\n    setEndScene(this.scene, p)\n    this.update()\n  }\n}\n\nconst setEndScene = (group: Two.Group, ti: number) => {\n  const distances = calculateDistances(group)\n  const total = distances.reduce((to: number, d: number) => to + d, 0)\n  const traversed: number = ti * total\n  let current = 0\n  for (let i = 0; i < group.children.length; i++) {\n    const distance = distances[i]\n    const min = current\n    const max = current + distance\n    ;(group.children[i] as Two.Path).ending = cmap(traversed, min, max, 0, 1)\n    current = max\n  }\n}\nfunction calculateDistances(group: Two.Group): number[] {\n  return group.children.reduce((distances: number[], child: Two.Object) => {\n    let d: number = 0\n    let a: Two.Vector\n    if (!(child as Two.Path).vertices) return distances\n    ;(child as Two.Path).vertices.map((b: Two.Vector, i: number) => {\n      if (i > 0) {\n        d += a.distanceTo(b)\n      }\n      a = b\n    })\n    return [...distances, d]\n  }, [])\n}\n\nconst clamp = (v: number, min: number, max: number) =>\n  Math.max(Math.min(v, max), min)\n\nconst map = (v: number, i1: number, i2: number, o1: number, o2: number) =>\n  o1 + (o2 - o1) * ((v - i1) / (i2 - i1))\n\nconst cmap = (v: number, i1: number, i2: number, o1: number, o2: number) =>\n  clamp(map(v, i1, i2, o1, o2), o1, o2)\n"],"names":["svgFormatting","svgXML","doc","DOMParser","parseFromString","svgEle","document","createElementNS","originSvgEle","querySelector","map","attr","attrValue","getAttribute","setAttribute","pathEle","querySelectorAll","forEach","path","removeAttribute","appendChild","getPassiveOptions","passive","check","window","addEventListener","removeEventListener","e","SvgDrawing","params","clearListner","bind","toSvgXml","toSvgBase64","drawingStart","drawingMove","drawingEnd","mouseUp","mouseMove","mouseDown","touchStart","touchMove","touchEnd","init","line","current","Two","Vector","penColor","penWidth","strokeCap","strokeLineJoin","type","Types","svg","el","width","clientWidth","height","clientHeight","domElement","renderer","svgElement","outerHTML","innerHTML","svgXml","btoa","appendTo","x","y","set","rect","getBoundingClientRect","makePoint","mx","my","left","top","linewidth","stroke","v","vertices","push","vprev","vnext","makeCurve","noFill","cap","join","addSelf","translation","clear","preventDefault","clientX","clientY","touch","touches","SvgAnimation","animationStart","shaking","initSvgXml","strokeAnimation","loadScene","loadSvgXml","splitEnd","shakingRange","canvas","randomShaking","Math","random","updateShake","frameCount","timeDelta","scene","children","child","position","clone","sceneChildrenRestore","play","unbind","twoObj","add","update","svgTwo","interpret","body","originWidth","removeChild","scale","center","svgNode","fresh","subdivide","t","setEndScene","p","group","ti","distances","calculateDistances","total","reduce","to","d","traversed","i","length","distance","min","max","ending","cmap","a","b","distanceTo","clamp","i1","i2","o1","o2"],"mappings":"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"}